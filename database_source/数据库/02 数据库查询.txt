员工表结构如下： 
Name     Type         Nullable Default Comments 
-------- ------------ -------- ------- -------- 
EMPNO    NUMBER(4)                       员工号       
ENAME    VARCHAR2(10) Y                  员工姓名       
JOB      VARCHAR2(9)  Y                  工作       
MGR      NUMBER(4)    Y                  上级编号       
HIREDATE DATE         Y                  雇佣日期       
SAL      NUMBER(7,2)  Y                  薪金       
COMM     NUMBER(7,2)  Y                  佣金       
DEPTNO   NUMBER(2)    Y                  部门编号

create table emp(  
       empo number(4) primary key,  
       ename varchar2(10),  
       job varchar2(9),
       mgr number(4),
       hiredate date,
       sal number(7,2),
       comm number(7,2),
       deptno number(2)
       );

部门表结构如下：
Name   Type         Nullable Default Comments 
------ ------------ -------- ------- -------- 
DEPTNO NUMBER(2)                         部门编号        
DNAME  VARCHAR2(14) Y                    部门名称     
LOC    VARCHAR2(13) Y                    地点 

create table dept(
        deptno number(2) primary key,
        dname varchar2(14),
        loc varchar2(13)
        );

emp表的现有数据如下：
insert into emp(empo,ename,job,mgr,hiredate,sal,comm,deptno) values('7369','SMITH','CLERK','7902',to_date('1980-12-17','yyyy-mm-dd'),'800.00',null,'20');
insert into emp(empo,ename,job,mgr,hiredate,sal,comm,deptno) values('7499','ALLEN','SALESMAN','7698',to_date('1981-2-20','yyyy-mm-dd'),'1600.00','300.00','30');
insert into emp(empo,ename,job,mgr,hiredate,sal,comm,deptno) values('7521','WARD','SALESMAN','7698',to_date('1981-2-22','yyyy-mm-dd'),'1250.00','500.00','30');
insert into emp(empo,ename,job,mgr,hiredate,sal,comm,deptno) values('7566','JONES','MANAGER','7839',to_date('1981-4-2','yyyy-mm-dd'),'2975.00',null,'20');
insert into emp(empo,ename,job,mgr,hiredate,sal,comm,deptno) values('7654','MARTIN','SALESMAN','7698',to_date('1981-9-28','yyyy-mm-dd'),'1250.00','1400.00','30');
insert into emp(empo,ename,job,mgr,hiredate,sal,comm,deptno) values('7698','BLAKE','MANAGER','7839',to_date('1981-5-1','yyyy-mm-dd'),'2850.00',null,'30');
insert into emp(empo,ename,job,mgr,hiredate,sal,comm,deptno) values('7782','CLARK','MANAGER','7839',to_date('1981-6-9','yyyy-mm-dd'),'2450.00',null,'10');
insert into emp(empo,ename,job,mgr,hiredate,sal,comm,deptno) values('7788','SCOTT','ANALYST','7566',to_date('1987-4-19','yyyy-mm-dd'),'4000.00',null,'20');
insert into emp(empo,ename,job,mgr,hiredate,sal,comm,deptno) values('7839','KING','PRESIDENT',null,to_date('1981-11-17','yyyy-mm-dd'),'5000.00',null,'10');
insert into emp(empo,ename,job,mgr,hiredate,sal,comm,deptno) values('7844','TURNER','SALESMAN','7698',to_date('1981-9-8','yyyy-mm-dd'),'1500.00','0.00','30');
insert into emp(empo,ename,job,mgr,hiredate,sal,comm,deptno) values('7876','ADAMS','CLERK','7788',to_date('1987-5-23','yyyy-mm-dd'),'1100.00',null,'20');
insert into emp(empo,ename,job,mgr,hiredate,sal,comm,deptno) values('7900','JAMES','CLERK','7698',to_date('1981-12-3','yyyy-mm-dd'),'950.00',null,'30');
insert into emp(empo,ename,job,mgr,hiredate,sal,comm,deptno) values('7902','FORD','ANALYST','7566',to_date('1981-12-3','yyyy-mm-dd'),'3000.00',null,'20');
insert into emp(empo,ename,job,mgr,hiredate,sal,comm,deptno) values('7934','MILLER','CLERK','7782',to_date('1982-1-23','yyyy-mm-dd'),'1300.00',null,'10');
insert into emp(empo,ename,job,mgr,hiredate,sal,comm,deptno) values('102','EricHu','Developer','1455',to_date('2011-5-26','yyyy-mm-dd'),'5500.00','14.00','10');
insert into emp(empo,ename,job,mgr,hiredate,sal,comm,deptno) values('104','huyong','PM','1455',to_date('2011-5-26','yyyy-mm-dd'),'5500.00','14.00','10');
insert into emp(empo,ename,job,mgr,hiredate,sal,comm,deptno) values('105','WANGJING','Developer','1455',to_date('2011-5-26','yyyy-mm-dd'),'5500.00','14.00','10');

dept表的现有数据如下：
insert into dept(deptno,dname,loc) values('10','ACCOUNTING','NEW YORK');
insert into dept(deptno,dname,loc) values('20','RESEARCH','DALLAS');
insert into dept(deptno,dname,loc) values('30','SALES','CHICAGO');
insert into dept(deptno,dname,loc) values('40','OPERATIONS','BOSTON');
insert into dept(deptno,dname,loc) values('50','50abc','50def');
insert into dept(deptno,dname,loc) values('60','Developer','HaiKou');

**************************************************************************************************************************************************

【算术运算符】
列出所有员工的年工资
select ename,(sal+nvl(comm,0))*12 as salpersal from emp;
说明：nvl(string1, replace_with)函数功能，如果string1为NULL，则NVL函数返回replace_with的值，否则返回string1的值

【普通比较运算符】
列出员工smith的薪金
select sal from emp where ename = 'SMITH';
列出薪金大于1500的员工姓名和薪金
select ename,sal from emp where sal > 1500;

【特殊比较运算符】
列出年薪在15000和20000之间的员工姓名、职位和年薪
select ename 姓名,job 职位,(sal + nvl(comm,0)) * 12 as 年薪 from emp where (sal + nvl(comm,0)) * 12 between 15000 and 20000;
列出不在sales部门的部门信息
select distinct * from dept where dname not in('SALES');
列出姓名中第三个字母为A的员工姓名
select ename from emp where ename like '__A%';
列出姓名中包含A和N的员工姓名
select ename from emp where ename like '%A%' and ename like '%N%';
列出无佣金的员工工号
select empo from emp where comm is null;

*****************************************************************************************************************************************************

聚合函数
【AVG】均值函数
函数AVG()用于计算一列中数据值的平均值。语法如下。
SELECT AVG (column_name) FROM table_name;
说明：AVG()函数的执行过程实际上是将一列中的值加起来，再将其和除以非NULL值的数目。AVG()函数只能作用于数值型数据，即列column_name中的数据必须是数值型的。在计算平均值时，AVG()函数将忽略NULL值。因此，如果要计算平均值的列中有NULL值，计算均值时，要特别注意。
计算所有员工的平均薪金
select avg(sal) from emp;

【COUNT】计数函数
COUNT()函数用来计算表中记录的个数或者列中值的个数，计算内容由SELECT语句指定。使用COUNT函数时，必须指定一个列的名称或者使用星号，星号表示计算一个表中的所有记录。两种使用形式如下。
COUNT(*)：计算表中行的总数，即使表中行的数据为NULL，也被计入在内。
COUNT(column)：计算column列包含的行的数目，如果该列中某行数据为NULL，则该行不计入统计总数。
列出佣金大于0的人数
select count(*) as 佣金大于0的人数 from emp where;
select count(comm) as 佣金大于0的人数 from emp;

【SUM】求和函数
求和函数SUM( )用于对数据求和，返回选取结果集中所有值的总和。
SELECT SUM(column_name) FROM table_name;
说明：SUM()函数只能作用于数值型数据，即列column_name中的数据必须是数值型的。当对某列数据进行求和时，如果该列存在NULL值，则SUM函数会忽略该值。
列出整个公司的薪金总和
select sum(sal) as 工资总和 from emp;

【MAX】和【MIN】最大/最小值函数
当需要了解一列中的最大值时，可以使用MAX()函数；同样，当需要了解一列中的最小值时，可以使用MIN()函数。语法如下。
SELECT MAX (column_name) / MIN (column_name) FROM table_name;
说明：列column_name中的数据可以是数值、字符串或是日期时间数据类型。MAX()/MIN()函数将返回与被传递的列同一数据类型的单一值。
对字符型数据的最大值，是按照首字母由A～Z的顺序排列，越往后，其值越大。当然，对于汉字则是按照其全拼拼音排列的，若首字符相同，则比较下一个字符，以此类推。当然，对与日期时间类型的数据也可以求其最大/最小值，其大小排列就是日期时间的早晚，越早认为其值越小。
列出公司最高薪金和最低薪金之间相差多少
select max(sal) - min(sal) from emp;

【聚合分析的重值处理】
可以使用ALL关键字指明对所选列中的所有数据进行处理，使用DISTINCT关键字指明对所选列中的非重值数据进行处理。以AVG()函数为例，语法如下。
SELECT AVG ([ALL/DISTINCT] column_name) FROM table_name;
说明：[ALL/DISTINCT]在缺省状态下，默认是ALL关键字，即不管是否有重值，处理所有数据。其他聚合函数的用法与此相同。
列出员工薪金共计多少种
select count(distinct sal) as DISTINCTSAL_COUNT from emp;